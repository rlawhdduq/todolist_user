name: Build and Deploy Spring Boot Application via SSH

on:
  push:
    branches:
      - master  # 타겟 브랜치
      
jobs:
  build:
    runs-on: ubuntu-latest # Ubunt로 실행

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Add Permissions for gralde wrapper
        run: chmod +x ./gradlew
        
      - name: Build with Gradle
        run: |
            ./gradlew clean build -x test # 빌드 과정에서 테스트 생략 -> 후일 테스트까지 하게 바꿔봐야겠다.
            
      - name: Deploy .jar File
        run: |
            pwd
            ls -al
            echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > private_key.pem
            chmod 600 private_key.pem
            scp -o StrictHostKeyChecking=no -i private_key.pem -P 2222 $GITHUB_WORKSPACE/build/libs/*.jar ubuntukjy@${{ secrets.HOST_IP }}:/spring/docker/compose/user/jar
            
      - name: Set SSH ssh-action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ubuntukjy
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 2222
          script: |
                  # 이건 ssh연결 된 상태에서 실행되는거라 추후에 dockerfile build나 이런거 할 때 여기에 명령어 작성하면 될듯 아래 명령어들은 다 쓰레기임
                  echo "CD start"
                  cd /spring/docker/compose
                  docker-compose -f docker-compose-user.yaml down -v
                  docker-compose -f docker-compose-user.yaml up -d --build
                  echo "CD end"
